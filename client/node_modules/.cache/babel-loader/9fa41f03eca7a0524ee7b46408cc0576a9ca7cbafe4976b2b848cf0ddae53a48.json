{"ast":null,"code":"var _jsxFileName = \"/home/albs/Tec/Task/Bot/chatbot/src/Chatbot.compoenent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffec, useState } from 'react';\nimport { Launcher } from 'react-chat-window';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBotRobot = () => {\n  _s();\n  const [messageList, setMessageList] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const room = 'user1';\n  useEffect(() => {\n    setSocket(io('http://localhost:3000'));\n    _sendMessage('Hey there !');\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (socket) {\n      socket.connect(true);\n      socket.emit('join', room);\n      socket.on('send-msg-response', async msg => {\n        setMessageList(prevMessageList => {\n          prevMessageList.pop();\n          return [...prevMessageList];\n        });\n        _sendMessage(msg);\n      });\n    }\n  }, [socket, room]);\n  const _onMessageWasSent = async message => {\n    setMessageList(prevMessageList => [...prevMessageList, message]);\n    _sendMessage('••••');\n    if (socket) {\n      socket.emit('new-msg', {\n        msg: message.data.text,\n        room\n      });\n    }\n  };\n  const _sendMessage = text => {\n    if (text.length > 0) {\n      setMessageList(prevMessageList => [...prevMessageList, {\n        author: 'them',\n        type: 'text',\n        data: {\n          text\n        }\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatbox\",\n    className: \"chatbox\",\n    children: /*#__PURE__*/_jsxDEV(Launcher, {\n      agentProfile: {\n        teamName: 'Chatbot',\n        imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n      },\n      onMessageWasSent: _onMessageWasSent,\n      messageList: messageList,\n      showEmoji: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBotRobot, \"ETIJNIyzsJkPqqUfK4u5tK7aJEM=\");\n_c = ChatBotRobot;\nexport default ChatBotRobot;\nvar _c;\n$RefreshReg$(_c, \"ChatBotRobot\");","map":{"version":3,"names":["React","useEffec","useState","Launcher","io","jsxDEV","_jsxDEV","ChatBotRobot","_s","messageList","setMessageList","socket","setSocket","room","useEffect","_sendMessage","disconnect","connect","emit","on","msg","prevMessageList","pop","_onMessageWasSent","message","data","text","length","author","type","id","className","children","agentProfile","teamName","imageUrl","onMessageWasSent","showEmoji","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/albs/Tec/Task/Bot/chatbot/src/Chatbot.compoenent.jsx"],"sourcesContent":["import React, { useEffec, useState } from 'react';\nimport { Launcher } from 'react-chat-window';\nimport io from 'socket.io-client';\n\nconst ChatBotRobot = () => {\n  const [messageList, setMessageList] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const room = 'user1';\n\n  useEffect(() => {\n    setSocket(io('http://localhost:3000'));\n    _sendMessage('Hey there !');\n\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (socket) {\n      socket.connect(true);\n      socket.emit('join', room);\n\n      socket.on('send-msg-response', async (msg) => {\n        setMessageList((prevMessageList) => {\n          prevMessageList.pop();\n          return [...prevMessageList];\n        });\n        _sendMessage(msg);\n      });\n    }\n  }, [socket, room]);\n\n  const _onMessageWasSent = async (message) => {\n    setMessageList((prevMessageList) => [...prevMessageList, message]);\n    _sendMessage('••••');\n    if (socket) {\n      socket.emit('new-msg', { msg: message.data.text, room });\n    }\n  };\n\n  const _sendMessage = (text) => {\n    if (text.length > 0) {\n      setMessageList((prevMessageList) => [\n        ...prevMessageList,\n        {\n          author: 'them',\n          type: 'text',\n          data: { text },\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div id=\"chatbox\" className=\"chatbox\">\n      <Launcher\n        agentProfile={{\n          teamName: 'Chatbot',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png',\n        }}\n        onMessageWasSent={_onMessageWasSent}\n        messageList={messageList}\n        showEmoji\n      />\n    </div>\n  );\n};\n\nexport default ChatBotRobot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMW,IAAI,GAAG,OAAO;EAEpBC,SAAS,CAAC,MAAM;IACdF,SAAS,CAACR,EAAE,CAAC,uBAAuB,CAAC,CAAC;IACtCW,YAAY,CAAC,aAAa,CAAC;IAE3B,OAAO,MAAM;MACX,IAAIJ,MAAM,EAAE;QACVA,MAAM,CAACK,UAAU,CAAC,CAAC;MACrB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENF,SAAS,CAAC,MAAM;IACd,IAAIH,MAAM,EAAE;MACVA,MAAM,CAACM,OAAO,CAAC,IAAI,CAAC;MACpBN,MAAM,CAACO,IAAI,CAAC,MAAM,EAAEL,IAAI,CAAC;MAEzBF,MAAM,CAACQ,EAAE,CAAC,mBAAmB,EAAE,MAAOC,GAAG,IAAK;QAC5CV,cAAc,CAAEW,eAAe,IAAK;UAClCA,eAAe,CAACC,GAAG,CAAC,CAAC;UACrB,OAAO,CAAC,GAAGD,eAAe,CAAC;QAC7B,CAAC,CAAC;QACFN,YAAY,CAACK,GAAG,CAAC;MACnB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACT,MAAM,EAAEE,IAAI,CAAC,CAAC;EAElB,MAAMU,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3Cd,cAAc,CAAEW,eAAe,IAAK,CAAC,GAAGA,eAAe,EAAEG,OAAO,CAAC,CAAC;IAClET,YAAY,CAAC,MAAM,CAAC;IACpB,IAAIJ,MAAM,EAAE;MACVA,MAAM,CAACO,IAAI,CAAC,SAAS,EAAE;QAAEE,GAAG,EAAEI,OAAO,CAACC,IAAI,CAACC,IAAI;QAAEb;MAAK,CAAC,CAAC;IAC1D;EACF,CAAC;EAED,MAAME,YAAY,GAAIW,IAAI,IAAK;IAC7B,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACnBjB,cAAc,CAAEW,eAAe,IAAK,CAClC,GAAGA,eAAe,EAClB;QACEO,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZJ,IAAI,EAAE;UAAEC;QAAK;MACf,CAAC,CACF,CAAC;IACJ;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKwB,EAAE,EAAC,SAAS;IAACC,SAAS,EAAC,SAAS;IAAAC,QAAA,eACnC1B,OAAA,CAACH,QAAQ;MACP8B,YAAY,EAAE;QACZC,QAAQ,EAAE,SAAS;QACnBC,QAAQ,EAAE;MACZ,CAAE;MACFC,gBAAgB,EAAEb,iBAAkB;MACpCd,WAAW,EAAEA,WAAY;MACzB4B,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjC,EAAA,CAjEID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAmElB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}