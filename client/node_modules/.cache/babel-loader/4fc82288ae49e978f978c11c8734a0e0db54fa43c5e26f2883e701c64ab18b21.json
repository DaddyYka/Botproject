{"ast":null,"code":"var _jsxFileName = \"/home/albs/Tec/Task/Bot/chatbot/src/Chatbot.compoenent.jsx\";\nimport React from \"react\";\nimport { Launcher } from '@bnbsystems/react-chat-window';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ChatBotRobot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageList: [],\n      socket: io(\"http://localhost:3000\"),\n      room: \"user1\"\n    };\n  }\n  UNSAFE_componentWillMount() {\n    this._sendMessage(\"Hey there !\");\n  }\n  componentDidMount() {\n    this.state.socket.connect(true);\n    this.state.socket.emit('join', this.state.room);\n    this.state.socket.on(\"send-msg-response\", async msg => {\n      this.state.messageList.pop();\n      await this.setState({\n        messageList: [...this.state.messageList]\n      });\n      this._sendMessage(msg);\n    });\n  }\n  async _onMessageWasSent(message) {\n    await this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n    this._sendMessage(\"••••\");\n    await this.state.socket.emit('new-msg', {\n      msg: message.data.text,\n      room: this.state.room\n    });\n  }\n  _sendMessage(text) {\n    if (text.length > 0) {\n      this.setState({\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: {\n            text\n          }\n        }]\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chatbox\",\n      className: \"chatbox\",\n      children: /*#__PURE__*/_jsxDEV(Launcher, {\n        agentProfile: {\n          teamName: 'Chatbot',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        },\n        onMessageWasSent: this._onMessageWasSent.bind(this),\n        messageList: this.state.messageList,\n        showEmoji: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default ChatBotRobot;","map":{"version":3,"names":["React","Launcher","io","jsxDEV","_jsxDEV","ChatBotRobot","Component","constructor","props","state","messageList","socket","room","UNSAFE_componentWillMount","_sendMessage","componentDidMount","connect","emit","on","msg","pop","setState","_onMessageWasSent","message","data","text","length","author","type","render","id","className","children","agentProfile","teamName","imageUrl","onMessageWasSent","bind","showEmoji","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/albs/Tec/Task/Bot/chatbot/src/Chatbot.compoenent.jsx"],"sourcesContent":["import React from \"react\";\nimport { Launcher } from '@bnbsystems/react-chat-window';\nimport io from 'socket.io-client';\n\nclass ChatBotRobot extends React.Component {\n    constructor(props) {\n        super(props);\nthis.state = {\n            messageList: [],\n            socket: io(\"http://localhost:3000\"),\n            room: \"user1\",\n        }\n}\n\nUNSAFE_componentWillMount() {\n    this._sendMessage(\"Hey there !\");\n}\ncomponentDidMount() {\n    this.state.socket.connect(true);\n    this.state.socket.emit('join', this.state.room);\nthis.state.socket.on(\"send-msg-response\", async (msg) => {\n        this.state.messageList.pop();\n        await this.setState({\n            messageList: [...this.state.messageList]\n        })\nthis._sendMessage(msg);\n    })\n}\n\nasync _onMessageWasSent(message) {\n    await this.setState({\n        messageList: [...this.state.messageList, message]\n    })\nthis._sendMessage(\"••••\");\n    await this.state.socket.emit('new-msg', { msg: message.data.text, room: this.state.room })\n}\n_sendMessage(text) {\n    if (text.length > 0) {\n        this.setState({\n            messageList: [...this.state.messageList, {\n                author: 'them',\n                type: 'text',\n                data: { text }\n            },]\n        })\n    }\n}\nrender() {\nreturn (\n        <div id=\"chatbox\" className=\"chatbox\">\n            <Launcher\n                agentProfile={{\n                    teamName: 'Chatbot',\n                    imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n                }}\n                onMessageWasSent={this._onMessageWasSent.bind(this)}\n                messageList={this.state.messageList}\n                showEmoji\n            />\n        </div>\n    );\n}\n}\n\nexport default ChatBotRobot;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,+BAA+B;AACxD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,SAASL,KAAK,CAACM,SAAS,CAAC;EACvCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACpB,IAAI,CAACC,KAAK,GAAG;MACDC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAET,EAAE,CAAC,uBAAuB,CAAC;MACnCU,IAAI,EAAE;IACV,CAAC;EACT;EAEAC,yBAAyBA,CAAA,EAAG;IACxB,IAAI,CAACC,YAAY,CAAC,aAAa,CAAC;EACpC;EACAC,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACN,KAAK,CAACE,MAAM,CAACK,OAAO,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACP,KAAK,CAACE,MAAM,CAACM,IAAI,CAAC,MAAM,EAAE,IAAI,CAACR,KAAK,CAACG,IAAI,CAAC;IACnD,IAAI,CAACH,KAAK,CAACE,MAAM,CAACO,EAAE,CAAC,mBAAmB,EAAE,MAAOC,GAAG,IAAK;MACjD,IAAI,CAACV,KAAK,CAACC,WAAW,CAACU,GAAG,CAAC,CAAC;MAC5B,MAAM,IAAI,CAACC,QAAQ,CAAC;QAChBX,WAAW,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW;MAC3C,CAAC,CAAC;MACV,IAAI,CAACI,YAAY,CAACK,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEA,MAAMG,iBAAiBA,CAACC,OAAO,EAAE;IAC7B,MAAM,IAAI,CAACF,QAAQ,CAAC;MAChBX,WAAW,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW,EAAEa,OAAO;IACpD,CAAC,CAAC;IACN,IAAI,CAACT,YAAY,CAAC,MAAM,CAAC;IACrB,MAAM,IAAI,CAACL,KAAK,CAACE,MAAM,CAACM,IAAI,CAAC,SAAS,EAAE;MAAEE,GAAG,EAAEI,OAAO,CAACC,IAAI,CAACC,IAAI;MAAEb,IAAI,EAAE,IAAI,CAACH,KAAK,CAACG;IAAK,CAAC,CAAC;EAC9F;EACAE,YAAYA,CAACW,IAAI,EAAE;IACf,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACjB,IAAI,CAACL,QAAQ,CAAC;QACVX,WAAW,EAAE,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,WAAW,EAAE;UACrCiB,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE,MAAM;UACZJ,IAAI,EAAE;YAAEC;UAAK;QACjB,CAAC;MACL,CAAC,CAAC;IACN;EACJ;EACAI,MAAMA,CAAA,EAAG;IACT,oBACQzB,OAAA;MAAK0B,EAAE,EAAC,SAAS;MAACC,SAAS,EAAC,SAAS;MAAAC,QAAA,eACjC5B,OAAA,CAACH,QAAQ;QACLgC,YAAY,EAAE;UACVC,QAAQ,EAAE,SAAS;UACnBC,QAAQ,EAAE;QACd,CAAE;QACFC,gBAAgB,EAAE,IAAI,CAACd,iBAAiB,CAACe,IAAI,CAAC,IAAI,CAAE;QACpD3B,WAAW,EAAE,IAAI,CAACD,KAAK,CAACC,WAAY;QACpC4B,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACA;AAEA,eAAerC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}